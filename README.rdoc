== README

This README would normally document whatever steps are necessary to get the
application up and running.

Things you may want to cover:

* Ruby version

ruby 2.1.x

* System dependencies

* Configuration

* Database creation

* Database initialization

* How to run the test suite

```sh
rake spec
```

* Services (job queues, cache servers, search engines, etc.)

* Deployment instructions

Use NGINX web-server. upfgphoto is optimized to NGINX with nginx-upload-module, and ngx_small_light.
In order to enable these module, use configure option as follows:

```sh
./configure --with-http_gzip_static_module --with-http_ssl_module --add-module=/home/kazushi/repos/nginx-1.6.3/modules/nginx-upload-module-2.2.0 --add-module=/home/kazushi/repos/nginx-1.6.3/modules/nginx-upload-progress-module-0.9.1 --add-module=/home/kazushi/repos/nginx-1.6.3/modules/ngx_small_light-0.6.7
```

Next, add a following line into your nginx.conf

```
location @unicorn {
    sendfile          on;
    proxy_redirect    off;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto https;
    proxy_set_header Host $http_host;

    proxy_pass http://unicorn;
}

location ~ ^/photo$ {
    if ($request_method = POST) {
        upload_pass @unicorn;
        upload_store /tmp/nginx;
        upload_store_access user:rw group:rw all:rw;
        upload_set_form_field "$upload_field_name[original_filename]"   "$upload_file_name";
        upload_set_form_field "$upload_field_name[content_type]"       "$upload_content_type";
        upload_set_form_field "$upload_field_name[tempfile]"   "$upload_tmp_path";
        upload_aggregate_form_field "$upload_field_name[md5]"  "$upload_file_md5";
        upload_aggregate_form_field "$upload_field_name[size]" "$upload_file_size";
        upload_pass_form_field ".*";
    }
}
```


Please feel free to use a different markup language if you do not plan to run
<tt>rake doc:app</tt>.
